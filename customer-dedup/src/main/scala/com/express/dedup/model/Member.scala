package com.express.dedup.model

import java.sql.{Date, Timestamp}
import java.math.BigDecimal
import org.apache.spark.sql.Row

/**
  * Member class holding all the 'Member' dimension fields.
  * The Member instance is used for manipulating the Member information during Deduplication process
  *
  * @author mbadgujar
  */
class Member(
              var member_id: Option[Long] = Some(-1l),
              var member_key: Option[Long] = Some(-1l),
              var household_key: Option[Long] = Some(-1l),
              var rid: Option[String] = None,
              var name_prefix: Option[String] = None,
              var first_name: Option[String] = None,
              var last_name: Option[String] = None,
              var name_suffix: Option[String] = None,
              var first_name_scrubbed: Option[String] = None,
              var last_name_scrubbed: Option[String] = None,
              var company_name: Option[String] = None,
              var city_scrubbed: Option[String] = None,
              var state_scrubbed: Option[String] = None,
              var zip_code_scrubbed: Option[String] = None,
              var zip4_scrubbed: Option[String] = None,
              var zip_full_scrubbed: Option[String] = None,
              var non_us_postal_code: Option[String] = None,
              var country_code: Option[String] = None,
              var dpv_key: Option[Long] = Some(-1l),
              var overlay_rank_key: Option[Long] = Some(-1l),
              var overlay_load_id: Option[Long] = Some(-1l),
              var overlay_date: Option[Date] = None,
              var direct_mail_consent: Option[String] = None,
              var direct_mail_consent_date: Option[Date] = None,
              var promotion_consent: Option[String] = None,
              var email_address: Option[String] = None,
              var valid_email: Option[String] = None,
              var email_consent: Option[String] = None,
              var email_consent_date: Option[Date] = None,
              var sms_consent: Option[String] = None,
              var sms_consent_date: Option[Date] = None,
              var valid_phone_for_call: Option[String] = None,
              var valid_phone_for_sms: Option[String] = None,
              var phone_ext: Option[String] = None,
              var phone_type: Option[String] = None,
              var phone_consent: Option[String] = None,
              var phone_nbr: Option[String] = None,
              var ean: Option[String] = None,
              var ean_type: Option[String] = None,
              var loyalty_id: Option[String] = None,
              var loyalty_type: Option[String] = None,
              var gender: Option[String] = None,
              var birth_date: Option[Date] = None,
              var deceased: Option[String] = None,
              var address_is_prison: Option[String] = None,
              var ecommerce_customer_nbr: Option[String] = None,
              var legacy_customer_nbr: Option[String] = None,
              var customer_add_date: Option[Date] = None,
              var customer_introduction_date: Option[Date] = None,
              var record_info_key: Option[Long] = Some(-1l),
              var original_record_info_key: Option[Long] = Some(-1l),
              var match_type_key: Option[Long] = Some(-1l),
              var latitude: Option[BigDecimal] = None,
              var longitude: Option[BigDecimal] = None,
              var closest_store_key: Option[Long] = Some(-1l),
              var distance_to_closest_store: Option[BigDecimal] = None,
              var second_closest_store_key: Option[Long] = Some(-1l),
              var distance_to_sec_closest_store: Option[BigDecimal] = None,
              var preferred_store_key: Option[Long] = Some(-1l),
              var preferred_channel: Option[String] = None,
              var distance_to_preferred_store: Option[BigDecimal] = None,
              var original_source_key: Option[Long] = Some(-1l),
              var current_source_key: Option[Long] = Some(-1l),
              var is_express_plcc: Option[String] = None,
              var first_trxn_date: Option[Date] = None,
              var first_trxn_store_key: Option[Long] = None,
              var last_store_purch_date: Option[Date] = None,
              var last_web_purch_date: Option[Date] = None,
              var ads_do_not_statement_insert: Option[String] = None,
              var ads_do_not_sell_name: Option[String] = None,
              var ads_spam_indicator: Option[String] = None,
              var ads_email_change_date: Option[Date] = None,
              var ads_return_mail_ind: Option[String] = None,
              var cm_gender_merch_descr: Option[String] = None,
              var record_type: Option[String] = None,
              var ip_code: Option[Long] = None,
              var current_tier_key: Option[Long] = None,
              var member_status: Option[String] = None,
              var member_acct_open_date: Option[Date] = None,
              var member_acct_close_date: Option[Date] = None,
              var member_acct_enroll_date: Option[Date] = None,
              var printed_card_req_date: Option[Date] = None,
              var printed_cert_opt_in: Option[String] = None,
              var printed_cert_opt_in_date: Option[Date] = None,
              var e_cert_opt_in: Option[String] = None,
              var e_cert_opt_in_date: Option[Date] = None,
              var facebook_id: Option[String] = None,
              var twitter_id: Option[String] = None,
              var lw_enrollment_source_key: Option[Long] = None,
              var lw_enrollment_store_key: Option[Long] = None,
              var ncoa_last_change_date: Option[Date] = None,
              var prospect_mb_purch_count: Option[Long] = None,
              var prospect_appearance_count: Option[Long] = None,
              var prospect_contact_count: Option[Long] = None,
              var member_acct_open_date_key: Option[Long] = None,
              var member_acct_close_date_key: Option[Long] = None,
              var member_acct_enroll_date_key: Option[Long] = None,
              var printed_card_req_date_key: Option[Long] = None,
              var printed_cert_opt_in_date_key: Option[Long] = None,
              var e_cert_opt_in_date_key: Option[Long] = None,
              var customer_add_date_key: Option[Long] = None,
              var customer_introduction_date_key: Option[Long] = None,
              var first_trxn_date_key: Option[Long] = None,
              var last_store_purch_date_key: Option[Long] = None,
              var last_web_purch_date_key: Option[Long] = None,
              var is_dm_marketable: Option[String] = None,
              var is_em_marketable: Option[String] = None,
              var is_sms_marketable: Option[String] = None,
              var closest_store_state: Option[String] = None,
              var is_loyalty_member: Option[String] = None,
              var preferred_store_state: Option[String] = None,
              var second_closest_store_state: Option[String] = None,
              var tier_name: Option[String] = None,
              var valid_loose: Option[String] = None,
              var valid_strict: Option[String] = None,
              var global_opt_out: Option[String] = None,
              var best_household_member: Option[String] = None,
              var address1_scrubbed: Option[String] = None,
              var address2_scrubbed: Option[String] = None,
              var county: Option[String] = None,
              var address_mailable: Option[String] = None,
              var member_source: Option[String] = None,
              var language_preference: Option[String] = None,
              var security_question: Option[String] = None,
              var request_loyalty_card: Option[String] = None,
              var request_paper_cert_date: Option[Date] = None,
              var address_type: Option[String] = None,
              var preapproval_number: Option[String] = None,
              var preapproval_expiration_date: Option[Date] = None,
              var communications_pref: Option[String] = None,
              var cdh_member_key: Option[String] = None,
              var opt_status: Option[String] = None,
              var token_nbr_association_request: Option[String] = None,
              var confirm_age_eighteen: Option[String] = None,
              var plcc_request_date: Option[Date] = None,
              var plcc_request_user_id: Option[String] = None,
              var address1: Option[String] = None,
              var address2: Option[String] = None,
              var city: Option[String] = None,
              var state: Option[String] = None,
              var zip_code: Option[String] = None,
              var zip4: Option[String] = None,
              var name_prefix_scrubbed: Option[String] = None,
              var gender_scrubbed: Option[String] = None,
              var name_suffix_scrubbed: Option[String] = None,
              var country_code_scrubbed: Option[String] = None,
              var dwelling_type: Option[String] = None,
              var is_plcc_request: Option[String] = None,
              var last_updated_date: Option[Timestamp] = None,
              var batch_id: Option[String] = None,
              var member_acct_open_date_time: Option[Timestamp] = None,
              var status: Option[String] = None,
              var source_overlay_rank: Option[Int] = None,
              var bank_card: Option[Seq[String]] = None,
              var open_close_ind: Option[Seq[String]] = None,
              var dedup_email_address: Option[Seq[String]] = None,
              var dedup_phone_number: Option[Seq[String]] = None,
              var trxn_date: Option[Date] = None
            ) {


  def getRow: Row = {
    Row.fromSeq(Seq[Any](
      member_id,
      member_key,
      household_key,
      rid,
      name_prefix,
      first_name,
      last_name,
      name_suffix,
      first_name_scrubbed,
      last_name_scrubbed,
      company_name,
      city_scrubbed,
      state_scrubbed,
      zip_code_scrubbed,
      zip4_scrubbed,
      zip_full_scrubbed,
      non_us_postal_code,
      country_code,
      dpv_key,
      overlay_rank_key,
      overlay_load_id,
      overlay_date,
      direct_mail_consent,
      direct_mail_consent_date,
      promotion_consent,
      email_address,
      valid_email,
      email_consent,
      email_consent_date,
      sms_consent,
      sms_consent_date,
      valid_phone_for_call,
      valid_phone_for_sms,
      phone_ext,
      phone_type,
      phone_consent,
      phone_nbr,
      ean,
      ean_type,
      loyalty_id,
      loyalty_type,
      gender,
      birth_date,
      deceased,
      address_is_prison,
      ecommerce_customer_nbr,
      legacy_customer_nbr,
      customer_add_date,
      customer_introduction_date,
      record_info_key,
      original_record_info_key,
      match_type_key,
      latitude,
      longitude,
      closest_store_key,
      distance_to_closest_store,
      second_closest_store_key,
      distance_to_sec_closest_store,
      preferred_store_key,
      preferred_channel,
      distance_to_preferred_store,
      original_source_key,
      current_source_key,
      is_express_plcc,
      first_trxn_date,
      first_trxn_store_key,
      last_store_purch_date,
      last_web_purch_date,
      ads_do_not_statement_insert,
      ads_do_not_sell_name,
      ads_spam_indicator,
      ads_email_change_date,
      ads_return_mail_ind,
      cm_gender_merch_descr,
      record_type,
      ip_code,
      current_tier_key,
      member_status,
      member_acct_open_date,
      member_acct_close_date,
      member_acct_enroll_date,
      printed_card_req_date,
      printed_cert_opt_in,
      printed_cert_opt_in_date,
      e_cert_opt_in,
      e_cert_opt_in_date,
      facebook_id,
      twitter_id,
      lw_enrollment_source_key,
      lw_enrollment_store_key,
      ncoa_last_change_date,
      prospect_mb_purch_count,
      prospect_appearance_count,
      prospect_contact_count,
      member_acct_open_date_key,
      member_acct_close_date_key,
      member_acct_enroll_date_key,
      printed_card_req_date_key,
      printed_cert_opt_in_date_key,
      e_cert_opt_in_date_key,
      customer_add_date_key,
      customer_introduction_date_key,
      first_trxn_date_key,
      last_store_purch_date_key,
      last_web_purch_date_key,
      is_dm_marketable,
      is_em_marketable,
      is_sms_marketable,
      closest_store_state,
      is_loyalty_member,
      preferred_store_state,
      second_closest_store_state,
      tier_name,
      valid_loose,
      valid_strict,
      global_opt_out,
      best_household_member,
      address1_scrubbed,
      address2_scrubbed,
      county,
      address_mailable,
      member_source,
      language_preference,
      security_question,
      request_loyalty_card,
      request_paper_cert_date,
      address_type,
      preapproval_number,
      preapproval_expiration_date,
      communications_pref,
      cdh_member_key,
      opt_status,
      token_nbr_association_request,
      confirm_age_eighteen,
      plcc_request_date,
      plcc_request_user_id,
      address1,
      address2,
      city,
      state,
      zip_code,
      zip4,
      name_prefix_scrubbed,
      gender_scrubbed,
      name_suffix_scrubbed,
      country_code_scrubbed,
      dwelling_type,
      is_plcc_request,
      last_updated_date,
      batch_id,
      member_acct_open_date_time,
      status,
      source_overlay_rank,
      bank_card,
      open_close_ind,
      dedup_email_address,
      dedup_phone_number,
      trxn_date
    ))
  }
}

object Member {

  private def getAs[T](row: Row, key: String): Option[T] = {
    val rowCols = row.schema.fields.map(_.name)
    if (rowCols.contains(key) && row.getAs[Any](key) != null)
      Option(row.getAs[T](key))
    else
      None
  }

  def fromRow(row: Row) = new Member(
    member_id = getAs[Long](row, "member_id"),
    member_key = getAs[Long](row, "member_key"),
    household_key = getAs[Long](row, "household_key"),
    rid = getAs[String](row, "rid"),
    name_prefix = getAs[String](row, "name_prefix"),
    first_name = getAs[String](row, "first_name"),
    last_name = getAs[String](row, "last_name"),
    name_suffix = getAs[String](row, "name_suffix"),
    first_name_scrubbed = getAs[String](row, "first_name_scrubbed"),
    last_name_scrubbed = getAs[String](row, "last_name_scrubbed"),
    company_name = getAs[String](row, "company_name"),
    city_scrubbed = getAs[String](row, "city_scrubbed"),
    state_scrubbed = getAs[String](row, "state_scrubbed"),
    zip_code_scrubbed = getAs[String](row, "zip_code_scrubbed"),
    zip4_scrubbed = getAs[String](row, "zip4_scrubbed"),
    zip_full_scrubbed = getAs[String](row, "zip_full_scrubbed"),
    non_us_postal_code = getAs[String](row, "non_us_postal_code"),
    country_code = getAs[String](row, "country_code"),
    dpv_key = getAs[Long](row, "dpv_key"),
    overlay_rank_key = getAs[Long](row, "overlay_rank_key"),
    overlay_load_id = getAs[Long](row, "overlay_load_id"),
    overlay_date = getAs[Date](row, "overlay_date"),
    direct_mail_consent = getAs[String](row, "direct_mail_consent"),
    direct_mail_consent_date = getAs[Date](row, "direct_mail_consent_date"),
    promotion_consent = getAs[String](row, "promotion_consent"),
    email_address = getAs[String](row, "email_address"),
    valid_email = getAs[String](row, "valid_email"),
    email_consent = getAs[String](row, "email_consent"),
    email_consent_date = getAs[Date](row, "email_consent_date"),
    sms_consent = getAs[String](row, "sms_consent"),
    sms_consent_date = getAs[Date](row, "sms_consent_date"),
    valid_phone_for_call = getAs[String](row, "valid_phone_for_call"),
    valid_phone_for_sms = getAs[String](row, "valid_phone_for_sms"),
    phone_ext = getAs[String](row, "phone_ext"),
    phone_type = getAs[String](row, "phone_type"),
    phone_consent = getAs[String](row, "phone_consent"),
    phone_nbr = getAs[String](row, "phone_nbr"),
    ean = getAs[String](row, "ean"),
    ean_type = getAs[String](row, "ean_type"),
    loyalty_id = getAs[String](row, "loyalty_id"),
    loyalty_type = getAs[String](row, "loyalty_type"),
    gender = getAs[String](row, "gender"),
    birth_date = getAs[Date](row, "birth_date"),
    deceased = getAs[String](row, "deceased"),
    address_is_prison = getAs[String](row, "address_is_prison"),
    ecommerce_customer_nbr = getAs[String](row, "ecommerce_customer_nbr"),
    legacy_customer_nbr = getAs[String](row, "legacy_customer_nbr"),
    customer_add_date = getAs[Date](row, "customer_add_date"),
    customer_introduction_date = getAs[Date](row, "customer_introduction_date"),
    record_info_key = getAs[Long](row, "record_info_key"),
    original_record_info_key = getAs[Long](row, "original_record_info_key"),
    match_type_key = getAs[Long](row, "match_type_key"),
    latitude = getAs[BigDecimal](row, "latitude"),
    longitude = getAs[BigDecimal](row, "longitude"),
    closest_store_key = getAs[Long](row, "closest_store_key"),
    distance_to_closest_store = getAs[BigDecimal](row, "distance_to_closest_store"),
    second_closest_store_key = getAs[Long](row, "second_closest_store_key"),
    distance_to_sec_closest_store = getAs[BigDecimal](row, "distance_to_sec_closest_store"),
    preferred_store_key = getAs[Long](row, "preferred_store_key"),
    preferred_channel = getAs[String](row, "preferred_channel"),
    distance_to_preferred_store = getAs[BigDecimal](row, "distance_to_preferred_store"),
    original_source_key = getAs[Long](row, "original_source_key"),
    current_source_key = getAs[Long](row, "current_source_key"),
    is_express_plcc = getAs[String](row, "is_express_plcc"),
    first_trxn_date = getAs[Date](row, "first_trxn_date"),
    first_trxn_store_key = getAs[Long](row, "first_trxn_store_key"),
    last_store_purch_date = getAs[Date](row, "last_store_purch_date"),
    last_web_purch_date = getAs[Date](row, "last_web_purch_date"),
    ads_do_not_statement_insert = getAs[String](row, "ads_do_not_statement_insert"),
    ads_do_not_sell_name = getAs[String](row, "ads_do_not_sell_name"),
    ads_spam_indicator = getAs[String](row, "ads_spam_indicator"),
    ads_email_change_date = getAs[Date](row, "ads_email_change_date"),
    ads_return_mail_ind = getAs[String](row, "ads_return_mail_ind"),
    cm_gender_merch_descr = getAs[String](row, "cm_gender_merch_descr"),
    record_type = getAs[String](row, "record_type"),
    ip_code = getAs[Long](row, "ip_code"),
    current_tier_key = getAs[Long](row, "current_tier_key"),
    member_status = getAs[String](row, "member_status"),
    member_acct_open_date = getAs[Date](row, "member_acct_open_date"),
    member_acct_close_date = getAs[Date](row, "member_acct_close_date"),
    member_acct_enroll_date = getAs[Date](row, "member_acct_enroll_date"),
    printed_card_req_date = getAs[Date](row, "printed_card_req_date"),
    printed_cert_opt_in = getAs[String](row, "printed_cert_opt_in"),
    printed_cert_opt_in_date = getAs[Date](row, "printed_cert_opt_in_date"),
    e_cert_opt_in = getAs[String](row, "e_cert_opt_in"),
    e_cert_opt_in_date = getAs[Date](row, "e_cert_opt_in_date"),
    facebook_id = getAs[String](row, "facebook_id"),
    twitter_id = getAs[String](row, "twitter_id"),
    lw_enrollment_source_key = getAs[Long](row, "lw_enrollment_source_key"),
    lw_enrollment_store_key = getAs[Long](row, "lw_enrollment_store_key"),
    ncoa_last_change_date = getAs[Date](row, "ncoa_last_change_date"),
    prospect_mb_purch_count = getAs[Long](row, "prospect_mb_purch_count"),
    prospect_appearance_count = getAs[Long](row, "prospect_appearance_count"),
    prospect_contact_count = getAs[Long](row, "prospect_contact_count"),
    member_acct_open_date_key = getAs[Long](row, "member_acct_open_date_key"),
    member_acct_close_date_key = getAs[Long](row, "member_acct_close_date_key"),
    member_acct_enroll_date_key = getAs[Long](row, "member_acct_enroll_date_key"),
    printed_card_req_date_key = getAs[Long](row, "printed_card_req_date_key"),
    printed_cert_opt_in_date_key = getAs[Long](row, "printed_cert_opt_in_date_key"),
    e_cert_opt_in_date_key = getAs[Long](row, "e_cert_opt_in_date_key"),
    customer_add_date_key = getAs[Long](row, "customer_add_date_key"),
    customer_introduction_date_key = getAs[Long](row, "customer_introduction_date_key"),
    first_trxn_date_key = getAs[Long](row, "first_trxn_date_key"),
    last_store_purch_date_key = getAs[Long](row, "last_store_purch_date_key"),
    last_web_purch_date_key = getAs[Long](row, "last_web_purch_date_key"),
    is_dm_marketable = getAs[String](row, "is_dm_marketable"),
    is_em_marketable = getAs[String](row, "is_em_marketable"),
    is_sms_marketable = getAs[String](row, "is_sms_marketable"),
    closest_store_state = getAs[String](row, "closest_store_state"),
    is_loyalty_member = getAs[String](row, "is_loyalty_member"),
    preferred_store_state = getAs[String](row, "preferred_store_state"),
    second_closest_store_state = getAs[String](row, "second_closest_store_state"),
    tier_name = getAs[String](row, "tier_name"),
    valid_loose = getAs[String](row, "valid_loose"),
    valid_strict = getAs[String](row, "valid_strict"),
    global_opt_out = getAs[String](row, "global_opt_out"),
    best_household_member = getAs[String](row, "best_household_member"),
    address1_scrubbed = getAs[String](row, "address1_scrubbed"),
    address2_scrubbed = getAs[String](row, "address2_scrubbed"),
    county = getAs[String](row, "county"),
    address_mailable = getAs[String](row, "address_mailable"),
    member_source = getAs[String](row, "member_source"),
    language_preference = getAs[String](row, "language_preference"),
    security_question = getAs[String](row, "security_question"),
    request_loyalty_card = getAs[String](row, "request_loyalty_card"),
    request_paper_cert_date = getAs[Date](row, "request_paper_cert_date"),
    address_type = getAs[String](row, "address_type"),
    preapproval_number = getAs[String](row, "preapproval_number"),
    preapproval_expiration_date = getAs[Date](row, "preapproval_expiration_date"),
    communications_pref = getAs[String](row, "communications_pref"),
    cdh_member_key = getAs[String](row, "cdh_member_key"),
    opt_status = getAs[String](row, "opt_status"),
    token_nbr_association_request = getAs[String](row, "token_nbr_association_request"),
    confirm_age_eighteen = getAs[String](row, "confirm_age_eighteen"),
    plcc_request_date = getAs[Date](row, "plcc_request_date"),
    plcc_request_user_id = getAs[String](row, "plcc_request_user_id"),
    address1 = getAs[String](row, "address1"),
    address2 = getAs[String](row, "address2"),
    city = getAs[String](row, "city"),
    state = getAs[String](row, "state"),
    zip_code = getAs[String](row, "zip_code"),
    zip4 = getAs[String](row, "zip4"),
    name_prefix_scrubbed = getAs[String](row, "name_prefix_scrubbed"),
    gender_scrubbed = getAs[String](row, "gender_scrubbed"),
    name_suffix_scrubbed = getAs[String](row, "name_suffix_scrubbed"),
    country_code_scrubbed = getAs[String](row, "country_code_scrubbed"),
    dwelling_type = getAs[String](row, "dwelling_type"),
    is_plcc_request = getAs[String](row, "is_plcc_request"),
    last_updated_date = getAs[Timestamp](row, "last_updated_date"),
    batch_id = getAs[String](row, "batch_id"),
    member_acct_open_date_time = getAs[Timestamp](row, "member_acct_open_date_time"),
    status = getAs[String](row, "status"),
    source_overlay_rank = getAs[Int](row, "source_overlay_rank"),
    bank_card = getAs[Seq[String]](row, "bank_card"),
    open_close_ind = getAs[Seq[String]](row, "open_close_ind"),
    dedup_email_address = getAs[Seq[String]](row, "dedup_email_address"),
    dedup_phone_number = getAs[Seq[String]](row, "dedup_phone_number"),
    trxn_date = getAs[Date](row, "trxn_date")
  )

  def getEmptyMember = new Member
}
