HistoryLoad: {
  dim_currency: {
    surrogateKey: "currency_key"
    generateSK: false
    doNotIncrSK: false
    grpColumns: ["currency_code"]
    ordColumns: ["create_date"]
    rename: {}
    transform: {}
  }

  dim_discount_type: {
    surrogateKey: "discount_type_key"
    generateSK: false
    doNotIncrSK: false
    grpColumns: ["discount_type_code", "discount_deal_code"]
    ordColumns: ["create_date"]
    rename: {}
    transform: {
    }
  }

  dim_product: {
    surrogateKey: "product_key"
    generateSK: false
    doNotIncrSK: false
    grpColumns: ["item_nbr"]
    ordColumns: ["product_key"]
    rename: {}
    transform: {
      price_group_code: "null"
      class_style_nbr: "null"
      from_item_nbr: "null"
      from_class_style_nbr: "null"
      from_class: "null"
      from_style: "null"
      from_color: "null"
      from_size: "null"
      season: "null"
      distro_method: "null"
      floorset: "null"
      trend: "null"
      dissection: "null"
      pricing_tier: "null"
      fashion_pyramid: "null"
      fabric: "null"
      quota: "null"
      lifestyle: "null"
      on_order_qty_sign: "null"
      on_order_quantity: "null"
      next_receipt_qty_sign: "null"
      next_receipt_quantity: "null"
      next_receipt_date: "null"
      file_retail_sign: "null"
      file_retail_price: "null"
      valued_cost_sign: "null"
      valued_cost: "null"
      item_status: "null"
      division: "null"
      po_cost_sign: "null"
      po_cost: "null"
      item_last_digits: "null"
      ticket_price_sign: "null"
      ticket_price: "null"
      item_create_date: "null"
      division_stat_cd: "-1"
      class_status: "null"
      last_season_reset_date: "null"
      shrinkage_factor: "null"
      season_cd: "-1"
      last_season_reset_iso_date: "null"
      vendor_cd: "-1"
      key_item_nbr: "null"
      key_item_descr: "null"
    }
  }

  dim_ring_code: {
    surrogateKey: "ring_code_id"
    generateSK: true
    doNotIncrSK: true
    grpColumns: ["campaign_key", "campaign_code", "cell_code", "campaign_segment_key", "ring_code"]
    ordColumns: ["create_date"]
    rename: {}
    transform: {}
  }

  dim_employee: {
    surrogateKey: "employee_key"
    generateSK: false
    doNotIncrSK: false
    grpColumns: ["employee_id"]
    ordColumns: ["create_date"]
    rename: {}
    transform: {
      FULL_PART_TIME_IND: "CASE WHEN LOWER(TRIM(FULL_PART_TIME_IND)) = '' THEN null WHEN (LOWER(TRIM(FULL_PART_TIME_IND)) = 'f') THEN 'F' WHEN (LOWER(TRIM(FULL_PART_TIME_IND)) = 'p') THEN 'P' ELSE FULL_PART_TIME_IND END"
      EMPLOYEE_STATUS: "CASE WHEN LOWER(TRIM(EMPLOYEE_STATUS)) = '' THEN null WHEN (LOWER(TRIM(EMPLOYEE_STATUS)) = 'a') THEN 'A' WHEN (LOWER(TRIM(EMPLOYEE_STATUS)) = 'd') THEN 'D' WHEN (LOWER(TRIM(EMPLOYEE_STATUS)) = 'l') THEN 'L' WHEN (LOWER(TRIM(EMPLOYEE_STATUS)) = 'p') THEN 'P' WHEN (LOWER(TRIM(EMPLOYEE_STATUS)) = 't') THEN 'T' WHEN (LOWER(TRIM(EMPLOYEE_STATUS)) = 'u') THEN 'U' ELSE EMPLOYEE_STATUS END"
    }
  }


  dim_store_master: {
    surrogateKey: "store_key"
    generateSK: false
    doNotIncrSK: false
    grpColumns: ["store_id"]
    ordColumns: ["create_date"]
    rename: {}
    transform: {
      price_group_code: "null"
      RETAIL_WEB_FLAG: "CASE WHEN LOWER(TRIM(RETAIL_WEB_FLAG)) = '' THEN null WHEN LOWER(TRIM(RETAIL_WEB_FLAG)) = 'unknown' THEN 'UNKNOWN' WHEN (LOWER(TRIM(RETAIL_WEB_FLAG)) = 'retail') THEN 'RETAIL' WHEN (LOWER(TRIM(RETAIL_WEB_FLAG)) = 'web') THEN 'WEB' ELSE RETAIL_WEB_FLAG END"
      OPEN_CLOSED_IND: "CASE WHEN LOWER(TRIM(OPEN_CLOSED_IND)) = '' THEN null WHEN LOWER(TRIM(OPEN_CLOSED_IND)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(OPEN_CLOSED_IND)) = '' THEN null WHEN (LOWER(TRIM(OPEN_CLOSED_IND)) = 'open') THEN 'OPEN' WHEN (LOWER(TRIM(OPEN_CLOSED_IND)) = 'closed') THEN 'CLOSED' ELSE OPEN_CLOSED_IND END"
      RTL_FLAG: "CASE WHEN LOWER(TRIM(RTL_FLAG)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(RTL_FLAG)) = '' THEN null WHEN (LOWER(TRIM(RTL_FLAG)) = 'y' OR LOWER(TRIM(RTL_FLAG)) = 'yes' OR TRIM(RTL_FLAG) = '1') THEN 'Y' WHEN (LOWER(TRIM(RTL_FLAG)) = 'n' OR LOWER(TRIM(RTL_FLAG)) = 'no' OR TRIM(RTL_FLAG) = '0') THEN 'N' ELSE RTL_FLAG END"
      LIKE_STORE_INDICATOR: "CASE WHEN LOWER(TRIM(LIKE_STORE_INDICATOR)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(LIKE_STORE_INDICATOR)) = '' THEN null WHEN (LOWER(TRIM(LIKE_STORE_INDICATOR)) = 'y' OR LOWER(TRIM(LIKE_STORE_INDICATOR)) = 'yes' OR TRIM(LIKE_STORE_INDICATOR) = '1') THEN 'Y' WHEN (LOWER(TRIM(LIKE_STORE_INDICATOR)) = 'n' OR LOWER(TRIM(LIKE_STORE_INDICATOR)) = 'no' OR TRIM(LIKE_STORE_INDICATOR) = '0') THEN 'N' ELSE LIKE_STORE_INDICATOR END"
    }
  }

  dim_store_group: {
    surrogateKey: "store_group_key"
    generateSK: true
    doNotIncrSK: true
    grpColumns: ["record_key", "active_store_number"]
    ordColumns: ["store_key"]
    rename: {}
    transform: {}
  }

  dim_member: {
    surrogateKey: "member_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: ["member_key"]
    ordColumns: ["member_key"]
    rename: {
      zip_full: "zip_full_scrubbed"
      address: "address1"
    }
    transform: {
      overlay_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(overlay_date,'MM/dd/yyyy HH:mm:ss'))"
      direct_mail_consent_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(direct_mail_consent_date,'MM/dd/yyyy HH:mm:ss'))"
      email_consent_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(email_consent_date,'MM/dd/yyyy HH:mm:ss'))"
      sms_consent_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(sms_consent_date,'MM/dd/yyyy HH:mm:ss'))"
      birth_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(birth_date,'MM/dd/yyyy HH:mm:ss'))"
      ads_email_change_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(ads_email_change_date,'MM/dd/yyyy HH:mm:ss'))"
      member_acct_open_date_key: "CASE WHEN member_acct_open_date_key IS NULL THEN -1 ELSE member_acct_open_date_key END"
      member_acct_close_date_key: "CASE WHEN member_acct_close_date_key IS NULL THEN -1 ELSE member_acct_close_date_key END"
      member_acct_enroll_date_key: "CASE WHEN member_acct_enroll_date_key IS NULL THEN -1 ELSE member_acct_enroll_date_key END"
      last_store_purch_date_key: "CASE WHEN last_store_purch_date_key IS NULL THEN -1 ELSE last_store_purch_date_key END"
      last_web_purch_date_key: "CASE WHEN last_web_purch_date_key IS NULL THEN -1 ELSE last_web_purch_date_key END"
      printed_card_req_date_key: "CASE WHEN printed_card_req_date_key IS NULL THEN -1 ELSE printed_card_req_date_key END"
      printed_cert_opt_in_date_key: "CASE WHEN printed_cert_opt_in_date_key IS NULL THEN -1 ELSE printed_cert_opt_in_date_key END"
      e_cert_opt_in_date_key: "CASE WHEN e_cert_opt_in_date_key IS NULL THEN -1 ELSE e_cert_opt_in_date_key END"
      customer_add_date_key: "CASE WHEN customer_add_date_key IS NULL THEN -1 ELSE customer_add_date_key END"
      customer_introduction_date_key: "CASE WHEN customer_introduction_date_key IS NULL THEN -1 ELSE customer_introduction_date_key END"
      first_trxn_date_key: "CASE WHEN first_trxn_date_key IS NULL THEN -1 ELSE first_trxn_date_key END"
      first_name_scrubbed: "NULL"
      last_name_scrubbed: "NULL"
      city_scrubbed: "NULL"
      state_scrubbed: "NULL"
      zip_code_scrubbed: "NULL"
      zip4_scrubbed: "NULL"
      dpv_key: "-1"
      overlay_load_id: "-1"
      ip_code: "NULL"
      global_opt_out: "NULL"
      best_household_member: "-1"
      address1_scrubbed: "NULL"
      address2_scrubbed: "NULL"
      county: "NULL"
      address_mailable: "NULL"
      member_source: "NULL"
      language_preference: "NULL"
      security_question: "NULL"
      request_loyalty_card: "NULL"
      request_paper_cert_date: "NULL"
      address_type: "NULL"
      preapproval_number: "NULL"
      preapproval_expiration_date: "NULL"
      communications_pref: "NULL"
      cdh_member_key: "-1"
      opt_status: "NULL"
      token_nbr_association_request: "NULL"
      confirm_age_eighteen: "NULL"
      plcc_request_date: "NULL"
      plcc_request_user_id: "NULL"
      address2: "NULL"
      name_prefix_scrubbed: "NULL"
      gender_scrubbed: "NULL"
      name_suffix_scrubbed: "NULL"
      country_code_scrubbed: "NULL"
      is_plcc_request: "NULL"
      dwelling_type: "NULL"
      PROMOTION_CONSENT: "CASE WHEN LOWER(TRIM(PROMOTION_CONSENT)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(PROMOTION_CONSENT)) = '' THEN null WHEN (LOWER(TRIM(PROMOTION_CONSENT)) = 'y' OR LOWER(TRIM(PROMOTION_CONSENT)) = 'yes' OR TRIM(PROMOTION_CONSENT) = '1') THEN 'YES' WHEN (LOWER(TRIM(PROMOTION_CONSENT)) = 'n' OR LOWER(TRIM(PROMOTION_CONSENT)) = 'no' OR TRIM(PROMOTION_CONSENT) = '0') THEN 'NO' ELSE PROMOTION_CONSENT END"
      EMAIL_CONSENT: "CASE WHEN LOWER(TRIM(EMAIL_CONSENT)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(EMAIL_CONSENT)) = '' THEN null WHEN (LOWER(TRIM(EMAIL_CONSENT)) = 'y' OR LOWER(TRIM(EMAIL_CONSENT)) = 'yes' OR TRIM(EMAIL_CONSENT) = '1') THEN 'YES' WHEN (LOWER(TRIM(EMAIL_CONSENT)) = 'n' OR LOWER(TRIM(EMAIL_CONSENT)) = 'no' OR TRIM(EMAIL_CONSENT) = '0') THEN 'NO' ELSE EMAIL_CONSENT END"
      PRINTED_CERT_OPT_IN: "CASE WHEN LOWER(TRIM(PRINTED_CERT_OPT_IN)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(PRINTED_CERT_OPT_IN)) = '' THEN null WHEN (LOWER(TRIM(PRINTED_CERT_OPT_IN)) = 'y' OR LOWER(TRIM(PRINTED_CERT_OPT_IN)) = 'yes' OR TRIM(PRINTED_CERT_OPT_IN) = '1') THEN 'YES' WHEN (LOWER(TRIM(PRINTED_CERT_OPT_IN)) = 'n' OR LOWER(TRIM(PRINTED_CERT_OPT_IN)) = 'no' OR TRIM(PRINTED_CERT_OPT_IN) = '0') THEN 'NO' ELSE PRINTED_CERT_OPT_IN END"
      E_CERT_OPT_IN: "CASE WHEN LOWER(TRIM(E_CERT_OPT_IN)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(E_CERT_OPT_IN)) = '' THEN null WHEN (LOWER(TRIM(E_CERT_OPT_IN)) = 'y' OR LOWER(TRIM(E_CERT_OPT_IN)) = 'yes' OR TRIM(E_CERT_OPT_IN) = '1') THEN 'YES' WHEN (LOWER(TRIM(E_CERT_OPT_IN)) = 'n' OR LOWER(TRIM(E_CERT_OPT_IN)) = 'no' OR TRIM(E_CERT_OPT_IN) = '0') THEN 'NO' ELSE E_CERT_OPT_IN END"
      DECEASED: "CASE WHEN LOWER(TRIM(DECEASED)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(DECEASED)) = '' THEN null WHEN (LOWER(TRIM(DECEASED)) = 'y' OR LOWER(TRIM(DECEASED)) = 'yes' OR TRIM(DECEASED) = '1') THEN 'YES' WHEN (LOWER(TRIM(DECEASED)) = 'n' OR LOWER(TRIM(DECEASED)) = 'no' OR TRIM(DECEASED) = '0') THEN 'NO' ELSE DECEASED END"
      ADDRESS_IS_PRISON: "CASE WHEN LOWER(TRIM(ADDRESS_IS_PRISON)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(ADDRESS_IS_PRISON)) = '' THEN null WHEN (LOWER(TRIM(ADDRESS_IS_PRISON)) = 'y' OR LOWER(TRIM(ADDRESS_IS_PRISON)) = 'yes' OR TRIM(ADDRESS_IS_PRISON) = '1') THEN 'YES' WHEN (LOWER(TRIM(ADDRESS_IS_PRISON)) = 'n' OR LOWER(TRIM(ADDRESS_IS_PRISON)) = 'no' OR TRIM(ADDRESS_IS_PRISON) = '0') THEN 'NO' ELSE ADDRESS_IS_PRISON END"
      IS_DM_MARKETABLE: "CASE WHEN LOWER(TRIM(IS_DM_MARKETABLE)) = '' THEN null WHEN LOWER(TRIM(IS_DM_MARKETABLE)) IS null THEN null WHEN (LOWER(TRIM(IS_DM_MARKETABLE)) = 'y' OR LOWER(TRIM(IS_DM_MARKETABLE)) = 'yes' OR TRIM(IS_DM_MARKETABLE) = '1') THEN 'YES' WHEN (LOWER(TRIM(IS_DM_MARKETABLE)) = 'n' OR LOWER(TRIM(IS_DM_MARKETABLE)) = 'no' OR TRIM(IS_DM_MARKETABLE) = '0') THEN 'NO' WHEN (LOWER(TRIM(IS_DM_MARKETABLE)) = 'dlm' OR LOWER(TRIM(IS_DM_MARKETABLE)) = 'mo' OR TRIM(IS_DM_MARKETABLE) = 'wo') THEN null ELSE IS_DM_MARKETABLE END"
      MEMBER_STATUS: "CASE WHEN LOWER(TRIM(MEMBER_STATUS)) = '' THEN null WHEN LOWER(TRIM(MEMBER_STATUS)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(IS_DM_MARKETABLE)) = 'active' THEN 'ACTIVE' WHEN LOWER(TRIM(IS_DM_MARKETABLE)) = 'cancelled' THEN 'CANCELLED' WHEN LOWER(TRIM(IS_DM_MARKETABLE)) = 'merged' THEN 'MERGED' ELSE MEMBER_STATUS END"
      IS_EXPRESS_PLCC: "CASE WHEN LOWER(TRIM(IS_EXPRESS_PLCC)) IS null THEN null WHEN (LOWER(TRIM(IS_EXPRESS_PLCC)) = 'y' OR LOWER(TRIM(IS_EXPRESS_PLCC)) = 'yes' OR TRIM(IS_EXPRESS_PLCC) = '1') THEN 'YES' WHEN (LOWER(TRIM(IS_EXPRESS_PLCC)) = 'n' OR LOWER(TRIM(IS_EXPRESS_PLCC)) = 'no' OR TRIM(IS_EXPRESS_PLCC) = '0') THEN 'NO' ELSE null END"
      ADS_DO_NOT_SELL_NAME: "CASE WHEN LOWER(TRIM(ADS_DO_NOT_SELL_NAME)) = '' THEN null WHEN LOWER(TRIM(ADS_DO_NOT_SELL_NAME)) = 'x' THEN 'X' WHEN LOWER(TRIM(ADS_DO_NOT_SELL_NAME)) = 'b' THEN 'B' WHEN LOWER(TRIM(ADS_DO_NOT_SELL_NAME)) = 'g' THEN 'G' WHEN LOWER(TRIM(ADS_DO_NOT_SELL_NAME)) = 'n' THEN 'N' WHEN LOWER(TRIM(ADS_DO_NOT_SELL_NAME)) = 's' THEN 'S' ELSE ADS_DO_NOT_SELL_NAME END"
      ADS_SPAM_INDICATOR: "CASE WHEN LOWER(TRIM(ADS_SPAM_INDICATOR)) = '' THEN null WHEN LOWER(TRIM(ADS_SPAM_INDICATOR)) = 'x' THEN 'X' WHEN LOWER(TRIM(ADS_SPAM_INDICATOR)) = 'b' THEN 'B' WHEN LOWER(TRIM(ADS_SPAM_INDICATOR)) = 'c' THEN 'C' WHEN LOWER(TRIM(ADS_SPAM_INDICATOR)) = 'e' THEN 'E' WHEN LOWER(TRIM(ADS_SPAM_INDICATOR)) = 'm' THEN 'M' WHEN LOWER(TRIM(ADS_SPAM_INDICATOR)) = 'o' THEN 'O' WHEN LOWER(TRIM(ADS_SPAM_INDICATOR)) = 'p' THEN 'P' WHEN LOWER(TRIM(ADS_SPAM_INDICATOR)) = 'r' THEN 'R' ELSE ADS_SPAM_INDICATOR END"
      ADS_RETURN_MAIL_IND: "CASE WHEN LOWER(TRIM(ADS_RETURN_MAIL_IND)) = '' THEN null WHEN (LOWER(TRIM(ADS_RETURN_MAIL_IND)) = 'y' OR LOWER(TRIM(ADS_RETURN_MAIL_IND)) = 'yes' OR TRIM(ADS_RETURN_MAIL_IND) = '1') THEN 'Y' WHEN (LOWER(TRIM(ADS_RETURN_MAIL_IND)) = 'n' OR LOWER(TRIM(ADS_RETURN_MAIL_IND)) = 'no' OR TRIM(ADS_RETURN_MAIL_IND) = '0') THEN 'N' WHEN (LOWER(TRIM(ADS_RETURN_MAIL_IND)) = 'wo' OR LOWER(TRIM(ADS_RETURN_MAIL_IND)) = '1900-01-01') THEN null ELSE null END"
      IS_EM_MARKETABLE: "CASE WHEN LOWER(TRIM(IS_EM_MARKETABLE)) IS null THEN null WHEN LOWER(TRIM(IS_EM_MARKETABLE)) = '' THEN null WHEN (LOWER(TRIM(IS_EM_MARKETABLE)) = 'y' OR LOWER(TRIM(IS_EM_MARKETABLE)) = 'yes' OR TRIM(IS_EM_MARKETABLE) = '1') THEN 'YES' WHEN (LOWER(TRIM(IS_EM_MARKETABLE)) = 'n' OR LOWER(TRIM(IS_EM_MARKETABLE)) = 'no' OR TRIM(IS_EM_MARKETABLE) = '0') THEN 'NO' ELSE IS_EM_MARKETABLE END"
      IS_SMS_MARKETABLE: "CASE WHEN LOWER(TRIM(IS_SMS_MARKETABLE)) IS null THEN null WHEN LOWER(TRIM(IS_SMS_MARKETABLE)) = '' THEN null WHEN (LOWER(TRIM(IS_SMS_MARKETABLE)) = 'y' OR LOWER(TRIM(IS_SMS_MARKETABLE)) = 'yes' OR TRIM(IS_SMS_MARKETABLE) = '1') THEN 'YES' WHEN (LOWER(TRIM(IS_SMS_MARKETABLE)) = 'n' OR LOWER(TRIM(IS_SMS_MARKETABLE)) = 'no' OR TRIM(IS_SMS_MARKETABLE) = '0') THEN 'NO' ELSE null END"
    }
  }


  dim_member_multi_phone: {
    surrogateKey: "member_multi_phone_key"
    generateSK: true
    doNotIncrSK: false
    grpColumns: ["member_key", "phone_number"]
    ordColumns: ["create_date"]
    rename: {
      consent_status: "phone_consent"
      consent_date: "phone_consent_date"
    }
    transform: {
      create_date: "CASE WHEN ph_create_date IS NULL AND mb_create_date IS NULL THEN CURRENT_TIMESTAMP() WHEN ph_create_date IS NULL THEN FROM_UNIXTIME(UNIX_TIMESTAMP(mb_create_date,'MM/dd/yyyy HH:mm:ss')) WHEN mb_create_date IS NULL THEN FROM_UNIXTIME(UNIX_TIMESTAMP(ph_create_date,'MM/dd/yyyy HH:mm:ss')) ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(greatest(ph_create_date,mb_create_date),'MM/dd/yyyy HH:mm:ss')) END"
      phone_consent: "CASE WHEN phone_consent IS NULL THEN 'NO' ELSE phone_consent END"
      phone_consent_date: "CASE WHEN phone_consent_date IS NULL THEN NULL ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(phone_consent_date,'MM/dd/yyyy HH:mm:ss'))END"
      valid_phone: "CASE WHEN valid_phone IS NULL THEN 'NO' ELSE valid_phone END"
      best_mobile_flag: "CASE WHEN best_mobile_flag IS NULL THEN 'NO' ELSE best_mobile_flag END"
      is_loyalty_flag: "CASE WHEN ph_loyalty_flag IS NULL AND mb_loyalty_flag IS NULL THEN 'NO' WHEN ph_loyalty_flag IS NULL THEN mb_loyalty_flag WHEN mb_loyalty_flag IS NULL THEN ph_loyalty_flag WHEN (ph_loyalty_flag='YES' OR mb_loyalty_flag='YES') THEN 'YES' ELSE mb_loyalty_flag END"
      best_member: "'NO'"
      source_key: "-1"
      original_source_key: "-1"
      match_type_key: "-1"

    }
  }


  dim_member_multi_email: {
    surrogateKey: "member_multi_email_key"
    generateSK: true
    doNotIncrSK: false
    ordered: true
    grpColumns: ["member_key", "email_address"]
    ordColumns: ["consent_date_retail", "consent_date_outlet", "consent_date_next", "first_pos_consent_date"]
    rename: {
      cm_gender_version: "gender_version"
      cm_frequency: "frequency"
      cm_affiliate_id: "affiliate_id"
      cm_sub_list_id: "sub_list_id"
      #mme_id: "rid"
    }
    transform: {
      match_type_key: {pos: 1, value: "-1"}
      first_pos_consent_date: {pos: 2, value: "FROM_UNIXTIME(UNIX_TIMESTAMP(first_pos_consent_date,'MM/dd/yyyy HH:mm:ss'))"}
      consent_date_retail: {pos: 3, value: "FROM_UNIXTIME(UNIX_TIMESTAMP(consent_date_retail,'MM/dd/yyyy HH:mm:ss'))"}
      consent_date_outlet: {pos: 4, value: "FROM_UNIXTIME(UNIX_TIMESTAMP(consent_date_outlet,'MM/dd/yyyy HH:mm:ss'))"}
      consent_date_next: {pos: 5, value: "FROM_UNIXTIME(UNIX_TIMESTAMP(consent_date_next,'MM/dd/yyyy HH:mm:ss'))"}
      welcome_email_consent_date: {pos: 6, value: "FROM_UNIXTIME(UNIX_TIMESTAMP(welcome_email_consent_date,'MM/dd/yyyy HH:mm:ss'))"}
      email_consent_date: {pos: 7, value: "CASE WHEN (consent_value_retail='YES' AND consent_value_outlet='NO') THEN consent_date_retail WHEN (consent_value_retail='NO' AND consent_value_outlet='YES') THEN consent_date_outlet WHEN (consent_value_retail='YES' AND consent_value_outlet='YES') THEN greatest(consent_date_outlet,consent_date_retail) ELSE NULL END"}
      email_consent: {pos: 8, value: "CASE WHEN consent_value_retail = 'YES' OR consent_value_outlet = 'YES' THEN 'YES' ELSE 'NO' END"}
      consent_history_id: {pos: 9, value: "-1"}
      create_date: {pos: 10, value: "greatest(consent_date_retail,consent_date_outlet,consent_date_next)"}
      #CONSENT_VALUE_RETAIL : {pos :11, value:"case when upper(CONSENT_VALUE_RETAIL)='YES' then 'YES' when upper(CONSENT_VALUE_RETAIL)='NO' then 'NO' when upper(CONSENT_VALUE_RETAIL)='UNKNOWN' then 'UNKNOWN' when (CONSENT_VALUE_RETAIL is null OR upper(CONSENT_VALUE_RETAIL)='NULL') then NULL else  CONSENT_VALUE_RETAIL end"}
      #CONSENT_VALUE_OUTLET : {pos :12, value:"case when upper(CONSENT_VALUE_OUTLET)='YES' then 'YES' when upper(CONSENT_VALUE_OUTLET)='NO' then 'NO' when (CONSENT_VALUE_OUTLET is null OR upper(CONSENT_VALUE_OUTLET)='NULL' OR trim(CONSENT_VALUE_OUTLET)='') then NULL else CONSENT_VALUE_OUTLET end"}
      #CONSENT_VALUE_NEXT : {pos :13, value:"case when upper(CONSENT_VALUE_NEXT)='YES' then 'YES' when upper(CONSENT_VALUE_NEXT)='NO' then 'NO' when (CONSENT_VALUE_NEXT is null OR upper(CONSENT_VALUE_NEXT)='NULL' OR trim(CONSENT_VALUE_NEXT)='') then NULL else CONSENT_VALUE_NEXT end"}
      #CONSENT_VALUE_RETAIL : {pos :11, value:"CASE WHEN LOWER(TRIM(CONSENT_VALUE_RETAIL)) is null THEN null WHEN LOWER(TRIM(CONSENT_VALUE_RETAIL)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(CONSENT_VALUE_RETAIL)) = '' THEN null WHEN (LOWER(TRIM(CONSENT_VALUE_RETAIL)) = 'y' OR  LOWER(TRIM(CONSENT_VALUE_RETAIL)) = 'yes' OR TRIM(CONSENT_VALUE_RETAIL) = '1') THEN 'YES' WHEN  (LOWER(TRIM(CONSENT_VALUE_RETAIL)) = 'n' OR LOWER(TRIM(CONSENT_VALUE_RETAIL)) = 'no' OR TRIM(CONSENT_VALUE_RETAIL) = '0') THEN 'NO' ELSE CONSENT_VALUE_RETAIL END"}
      #CONSENT_VALUE_OUTLET : {pos :12, value:"CASE WHEN LOWER(TRIM(CONSENT_VALUE_RETAIL)) is null THEN null WHEN LOWER(TRIM(CONSENT_VALUE_RETAIL)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(CONSENT_VALUE_OUTLET)) = '' THEN null WHEN (LOWER(TRIM(CONSENT_VALUE_OUTLET)) = 'y' OR  LOWER(TRIM(CONSENT_VALUE_OUTLET)) = 'yes' OR TRIM(CONSENT_VALUE_OUTLET) = '1') THEN 'YES' WHEN  (LOWER(TRIM(CONSENT_VALUE_OUTLET)) = 'n' OR LOWER(TRIM(CONSENT_VALUE_OUTLET)) = 'no' OR TRIM(CONSENT_VALUE_OUTLET) = '0') THEN 'NO' ELSE CONSENT_VALUE_OUTLET END"}
      #CONSENT_VALUE_NEXT : {pos :13, value:"CASE WHEN LOWER(TRIM(CONSENT_VALUE_RETAIL)) is null THEN null WHEN LOWER(TRIM(CONSENT_VALUE_RETAIL)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(CONSENT_VALUE_NEXT)) = '' THEN null WHEN (LOWER(TRIM(CONSENT_VALUE_NEXT)) = 'y' OR  LOWER(TRIM(CONSENT_VALUE_NEXT)) = 'yes' OR TRIM(CONSENT_VALUE_NEXT) = '1') THEN 'YES' WHEN  (LOWER(TRIM(CONSENT_VALUE_NEXT)) = 'n' OR LOWER(TRIM(CONSENT_VALUE_NEXT)) = 'no' OR TRIM(CONSENT_VALUE_NEXT) = '0') THEN 'NO' ELSE CONSENT_VALUE_NEXT END"}
      rid: {pos: 11, value: "null"}
    }
  }

  dim_member_consent: {
    surrogateKey: "consent_history_id"
    generateSK: false
    doNotIncrSK: false
    grpColumns: ["member_key", "consent_type"]
    //grpColumns : ["member_key","consent_type","consent_subtype"]
    ordColumns: ["create_date"]
    rename: {}
    transform: {
      //consent_date : "parse_date(consent_date,'MM/dd/yyyy HH:mm:ss')"
      consent_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(consent_date,'MM/dd/yyyy HH:mm:ss'))"
      consent_subtype: "NULL"
      is_loyalty: "case when loyalty_id is null then 'NO' when loyalty_id ='' then 'NO' else 'YES' end"
      source_key: "-1"
      original_source_key: "-1"
    }
  }

  dim_household: {
    surrogateKey: "household_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: ["household_key"]
    ordColumns: ["create_date"]
    rename: {

    }
    transform: {
      create_date: "greatest(last_store_purch_date,last_web_purch_date)"
      first_trxn_date_key: "CASE WHEN first_trxn_date_key IS NULL THEN -1 ELSE first_trxn_date_key END"
      add_date_key: "CASE WHEN add_date_key IS NULL THEN -1 ELSE add_date_key END"
      introduction_date_key: "CASE WHEN introduction_date_key IS NULL THEN -1 ELSE introduction_date_key END"
      last_store_purch_date_key: "CASE WHEN last_store_purch_date_key IS NULL THEN -1 ELSE last_store_purch_date_key END"
      last_web_purch_date_key: "CASE WHEN last_web_purch_date_key IS NULL THEN -1 ELSE last_web_purch_date_key END"
      account_open_date_key: "CASE WHEN account_open_date_key IS NULL THEN -1 ELSE account_open_date_key END"
      Is_Express_PLCC: "CASE WHEN LOWER(TRIM(Is_Express_PLCC)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(Is_Express_PLCC)) = '' THEN null WHEN (LOWER(TRIM(Is_Express_PLCC)) = 'y' OR LOWER(TRIM(Is_Express_PLCC)) = 'yes' OR TRIM(Is_Express_PLCC) = '1') THEN 'YES' WHEN (LOWER(TRIM(Is_Express_PLCC)) = 'n' OR LOWER(TRIM(Is_Express_PLCC)) = 'no' OR TRIM(Is_Express_PLCC) = '0') THEN 'NO' ELSE Is_Express_PLCC END"
    }
  }

  fact_card_history: {
    surrogateKey: "card_history_id"
    generateSK: false
    doNotIncrSK: false
    ordered: true
    grpColumns: []
    ordColumns: []
    rename: {}
    transform: {
      account_open_date: {pos: 1, value: "parse_date(account_open_date,'MM/dd/yyyy HH:mm:ss')"}
      last_purchase_date: {pos: 2, value: "parse_date(last_purchase_date,'MM/dd/yyyy HH:mm:ss')"}
      closed_date: {pos: 3, value: "parse_date(closed_date,'MM/dd/yyyy HH:mm:ss')"}
      cycle_update_date: {pos: 4, value: "parse_date(cycle_update_date,'MM/dd/yyyy HH:mm:ss')"}
      card_issue_date: {pos: 5, value: "parse_date(card_issue_date,'MM/dd/yyyy HH:mm:ss')"}
      e_statement_change_date: {pos: 6, value: "parse_date(e_statement_change_date,'MM/dd/yyyy HH:mm:ss')"}
      last_return_date: {pos: 7, value: "parse_date(last_return_date,'MM/dd/yyyy HH:mm:ss')"}
      email_change_date: {pos: 8, value: "parse_date(email_change_date,'MM/dd/yyyy HH:mm:ss')"}
      issued_date: {pos: 9, value: "parse_date(issued_date,'MM/dd/yyyy HH:mm:ss')"}
      expiration_date: {pos: 10, value: "parse_date(expiration_date,'MM/dd/yyyy HH:mm:ss')"}
      registration_date: {pos: 11, value: "parse_date(registration_date,'MM/dd/yyyy HH:mm:ss')"}
      unregistration_date: {pos: 12, value: "parse_date(unregistration_date,'MM/dd/yyyy HH:mm:ss')"}
      first_card_txn_date: {pos: 13, value: "parse_date(first_card_txn_date,'MM/dd/yyyy HH:mm:ss')"}
      last_card_txn_date: {pos: 14, value: "parse_date(last_card_txn_date,'MM/dd/yyyy HH:mm:ss')"}
      match_type_key: {pos: 15, value: "-1"}
      source_key: {pos: 16, value: "-1"}
      RECOURSE_IND: {pos: 17, value: "CASE WHEN LOWER(TRIM(RECOURSE_IND)) is null THEN null WHEN LOWER(TRIM(RECOURSE_IND)) = '' THEN null WHEN (LOWER(TRIM(RECOURSE_IND)) = 'y' OR LOWER(TRIM(RECOURSE_IND)) = 'yes' OR TRIM(RECOURSE_IND) = '1') THEN 'YES' WHEN (LOWER(TRIM(RECOURSE_IND)) = 'n' OR LOWER(TRIM(RECOURSE_IND)) = 'no' OR TRIM(RECOURSE_IND) = '0') THEN 'NO' ELSE RECOURSE_IND END"}
      ACTIVATION_FLAG: {pos: 18, value: "CASE WHEN LOWER(TRIM(ACTIVATION_FLAG)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(ACTIVATION_FLAG)) = '' THEN null WHEN (LOWER(TRIM(ACTIVATION_FLAG)) = 'y' OR LOWER(TRIM(ACTIVATION_FLAG)) = 'yes' OR TRIM(ACTIVATION_FLAG) = '1') THEN 'Y' WHEN (LOWER(TRIM(ACTIVATION_FLAG)) = 'n' OR LOWER(TRIM(ACTIVATION_FLAG)) = 'no' OR TRIM(ACTIVATION_FLAG) = '0') THEN 'N' ELSE ACTIVATION_FLAG END"}
      E_STATEMENT_IND: {pos: 19, value: "CASE WHEN LOWER(TRIM(E_STATEMENT_IND)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(E_STATEMENT_IND)) = '' THEN null WHEN (LOWER(TRIM(E_STATEMENT_IND)) = 'y' OR LOWER(TRIM(E_STATEMENT_IND)) = 'yes' OR TRIM(E_STATEMENT_IND) = '1') THEN 'Y' WHEN (LOWER(TRIM(E_STATEMENT_IND)) = 'n' OR LOWER(TRIM(E_STATEMENT_IND)) = 'no' OR TRIM(E_STATEMENT_IND) = '1') THEN 'N' ELSE E_STATEMENT_IND END"}
      MARKETABLE_IND: {pos: 20, value: "CASE WHEN LOWER(TRIM(MARKETABLE_IND)) = 'unknown' THEN null  WHEN LOWER(TRIM(MARKETABLE_IND)) = '' THEN null WHEN (LOWER(TRIM(MARKETABLE_IND)) = 'y' OR LOWER(TRIM(MARKETABLE_IND)) = 'yes' OR TRIM(MARKETABLE_IND) = '1') THEN 'Y' WHEN (LOWER(TRIM(MARKETABLE_IND)) = 'n' OR LOWER(TRIM(MARKETABLE_IND)) = 'no' OR TRIM(MARKETABLE_IND) = '0') THEN 'N' ELSE MARKETABLE_IND END"}
      OPEN_CLOSE_IND: {pos: 21, value: "CASE WHEN LOWER(TRIM(OPEN_CLOSE_IND)) = '' THEN null WHEN (LOWER(TRIM(OPEN_CLOSE_IND)) = 'c') THEN 'C' WHEN (LOWER(TRIM(OPEN_CLOSE_IND)) = 'o') THEN 'O' ELSE OPEN_CLOSE_IND END"}
      is_plcc_request: {pos: 22, value: "null"}
    }
  }

  fact_waterfall_summary: {
    surrogateKey: ""
    generateSK: false
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {}
    transform: {
      mcd_criteria: 'bp_historical'
    }
  }

  fact_tender_history: {
    surrogateKey: "fact_tender_hist_id"
    generateSK: false
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      SALESPSERSON: "salesperson"
    }
    transform: {
      #trxn_date     : "parse_date(trxn_date,'MM/dd/yyyy HH:mm:ss')"
      trxn_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(trxn_date,'MM/dd/yyyy HH:mm:ss'))"
      match_type_key: "-1"
      post_void_ind: "case when trim(post_void_ind)='' then NULL when trim(post_void_ind) = '1' then 'Y' when trim(post_void_ind) = '0' then 'N' else post_void_ind end"
      associate_sales_flag: "case when trim(associate_sales_flag)='' then NULL when trim(associate_sales_flag) = '1' then 'Y' when trim(associate_sales_flag) = '0' then 'N' else associate_sales_flag end"
    }
  }

  fact_transaction_summary: {
    surrogateKey: "transaction_summary_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {}
    transform: {
      match_type_key: "-1"
      record_info_key: "-1"
      max_detail_id: "NULL"
      cogs: "NULL"
      margin: "NULL"
      currency_key: "CASE WHEN currency_key IS NULL THEN -1 ELSE currency_key END"
      trxn_date_key: "CASE WHEN trxn_date_key IS NULL THEN -1 ELSE trxn_date_key END"
      GIFT_CARD_SALES_ONLY_IND: "CASE WHEN LOWER(TRIM(GIFT_CARD_SALES_ONLY_IND)) = '' THEN null WHEN (LOWER(TRIM(GIFT_CARD_SALES_ONLY_IND)) = 'y' OR LOWER(TRIM(GIFT_CARD_SALES_ONLY_IND)) = 'yes' OR TRIM(GIFT_CARD_SALES_ONLY_IND) = '1') THEN 'Y' WHEN (LOWER(TRIM(GIFT_CARD_SALES_ONLY_IND)) = 'n' OR LOWER(TRIM(GIFT_CARD_SALES_ONLY_IND)) = 'no' OR TRIM(GIFT_CARD_SALES_ONLY_IND) = '0') THEN 'N' ELSE GIFT_CARD_SALES_ONLY_IND END"
      HAS_DETAIL: "CASE WHEN LOWER(TRIM(HAS_DETAIL)) = '' THEN null WHEN (LOWER(TRIM(HAS_DETAIL)) = 'y' OR LOWER(TRIM(HAS_DETAIL)) = 'yes' OR TRIM(HAS_DETAIL) = '1') THEN 'YES' WHEN (LOWER(TRIM(HAS_DETAIL)) = 'n' OR LOWER(TRIM(HAS_DETAIL)) = 'no' OR TRIM(HAS_DETAIL) = '0') THEN 'NO' ELSE HAS_DETAIL END"
    }
  }

  fact_dedupe_member_history: {
    surrogateKey: "dedupe_member_hist_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {}
    transform: {}
  }

  fact_transaction_detail: {
    surrogateKey: "transaction_detail_id"
    generateSK: false
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      fact_trxn_detail_id: "transaction_detail_id"
    }
    transform: {
      trxn_detail_id: "concat(trxn_id,trxn_seq_nbr)"
      record_info_key: "-1"
      cogs: "NULL"
      margin: "NULL"
      trxn_date_key: "CASE WHEN trxn_date_key IS NULL THEN -1 ELSE trxn_date_key END"
      GIFT_CARD_SALES_IND: "CASE WHEN LOWER(TRIM(GIFT_CARD_SALES_IND)) = 'unknown' THEN 'UNKNOWN' WHEN LOWER(TRIM(GIFT_CARD_SALES_IND)) = '' THEN null WHEN (LOWER(TRIM(GIFT_CARD_SALES_IND)) = 'y' OR LOWER(TRIM(GIFT_CARD_SALES_IND)) = 'yes' OR TRIM(GIFT_CARD_SALES_IND) = '1') THEN 'Y' WHEN (LOWER(TRIM(GIFT_CARD_SALES_IND)) = 'n' OR LOWER(TRIM(GIFT_CARD_SALES_IND)) = 'no' OR TRIM(GIFT_CARD_SALES_IND) = '0') THEN 'N' ELSE GIFT_CARD_SALES_IND END"
    }
  }

  fact_scoring_history: {
    surrogateKey: "scoring_history_id"
    generateSK: false
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {}
    transform: {
      scoring_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(scoring_date,'MM/dd/yyyy HH:mm:ss'))"
    }
  }

  dim_cs_agent: {
    surrogateKey: "cs_agent_key"
    generateSK: true
    doNotIncrSK: true
    grpColumns: ["cs_agent_id"]
    ordColumns: ["createdate"]
    rename: {
      id: "cs_agent_id"
      agentnumber: "cs_agent_nbr"
      groupid: "cs_agent_group_id"
      firstname: "cs_agent_first_name"
      lastname: "cs_agent_last_name"
      emailaddress: "cs_agent_email_addr"
      phonenumber: "cs_agent_phone_nbr"
      extension: "cs_agent_extension"
      username: "cs_agent_username"
      status: "cs_agent_status_cd"
      roleid: "cs_agent_role_id"
    }
    transform: {}
  }

  dim_kill_list: {
    surrogateKey: "kill_list_id"
    generateSK: true
    doNotIncrSK: true
    grpColumns: ["ip_code", "household_key", "first_name", "last_name", "address_line_one", "zipcode"]
    ordColumns: ["createdate"]
    rename: {
      memberid: "ip_code"
      householdkey: "household_key"
      memberkey: "member_key"
      firstname: "first_name"
      nameprefix: "name_prefix"
      middlename: "middle_name"
      lastname: "last_name"
      namesuffix: "name_suffix"
      addresslineone: "address_line_one"
      addresslinetwo: "address_line_two"
      addresslinethree: "address_line_three"
      addresslinefour: "address_line_four"
      statuscode: "status_code"
    }
    transform: {}
  }

  dim_reward_def: {
    surrogateKey: "reward_def_key"
    generateSK: true
    doNotIncrSK: true
    grpColumns: ["reward_def_id"]
    ordColumns: ["createdate"]
    rename: {
      id: "reward_def_id"
      #TIER_KEY            : "tier_key"
      certificatetypecode: "certificate_type_code"
      name: "reward_name"
      howmanypointstoearn: "points_required_to_earn"
      pointtype: "point_type"
      pointevent: "point_event"
      catalogstartdate: "catalog_start_date"
      catalogenddate: "catalog_end_date"
      active: "active_flag"
    }
    transform: {
      #reward_long_description  : "NULL"
      #reward_short_description : "NULL"
      #expiration_period        : "NULL"
      #expiration_period_unit   : "NULL"
      #tierid                   : "CASE WHEN tier_key = 1 THEN 1540 WHEN tier_key = 2 THEN 1539 ELSE tier_key END"
      #catalog_start_date       : "FROM_UNIXTIME(UNIX_TIMESTAMP(catalog_start_date,'yyyyMMddHHmmss'))"
      #catalog_end_date         : "FROM_UNIXTIME(UNIX_TIMESTAMP(catalog_end_date,'yyyyMMddHHmmss'))"
      #is_appeasement           : "CASE WHEN UPPER(TRIM(certificate_type_code)) = 'APPEASEMENT' THEN 'YES' ELSE 'NO' END"
    }
  }

  dim_tier: {
    surrogateKey: "tier_key"
    generateSK: false
    doNotIncrSK: false
    grpColumns: ["tier_id"]
    ordColumns: ["updatedate"]
    rename: {
      #TIER_KEY              : "tier_key"
      tierid: "tier_id"
      tiername: "tier_name"
      description: "tier_descr"
      entrypoints: "min_points_for_tier"
      exitpoints: "max_points_for_tier"
      expirationperiod: "expiration_period"
      expirationperiodunit: "expiration_period_unit"
      activityperiod: "activity_period"
      activityperiodmethod: "activity_period_method"
      activityperiodunit: "activity_period_unit"
      mobileimageindex: "mobile_image_index"
      addtoenrollmentdate: "add_to_enrollment_date"
      displaytext: "display_text"
    }
    transform: {
      "add_to_enrollment_date": "FROM_UNIXTIME(UNIX_TIMESTAMP(add_to_enrollment_date,'yyyyMMddHHmmss'))"
      #tier_source                  : 'LW'
      #tier_point_type_name         : "NULL"
      #expire_date_expr             : "NULL"
      #activity_period_start_expr   : "NULL"
      #activity_period_end_expr     : "NULL"
      #point_event_names            : "NULL"
    }
  }

  fact_campaign_history: {
    surrogateKey: "fact_campaign_history_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      rowkey: "row_key"
      memberid: "ip_code"
      emailaddress: "email_address"
      tierid: "tier_id"
      cellcode: "cell_code"
      campaignkey: "campaign_key"
      filetypeid: "file_type_id"
      filedate: "file_date"
      filename: "file_name"
    }
    transform: {
      file_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(file_date,'yyyyMMddHHmmss'))"
    }
  }

  fact_cs_notes_history: {
    surrogateKey: "cs_notes_history_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      id: "notes_id"
      memberid: "ip_code"
      note: "notes"
      createdby: "createdby_from_lw"
      createdate: "createdate_from_lw"
      updatedate: "updatedate_from_lw"
    }
    transform: {
      createdate_from_lw: "FROM_UNIXTIME(UNIX_TIMESTAMP(createdate_from_lw,'yyyyMMddHHmmss'))"
      updatedate_from_lw: "FROM_UNIXTIME(UNIX_TIMESTAMP(updatedate_from_lw,'yyyyMMddHHmmss'))"
    }
  }


  fact_member_coupons: {
    surrogateKey: "fact_member_coupons_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      coupondefid: "coupon_def_id"
      memberid: "ip_code"
      timesused: "time_used"
      dateissued: "date_issued"
      dateredeemed: "date_redeemed"
      expirydate: "expiry_date"
      createdate: "create_date"
      displayorder: "display_order"
      certificatenmbr: "certificate_nmbr"
      campaignid: "campaign_id"
      status: "member_coupon_status"
    }
    transform: {
      date_issued: "FROM_UNIXTIME(UNIX_TIMESTAMP(date_issued,'yyyyMMddHHmmss'))"
      date_redeemed: "FROM_UNIXTIME(UNIX_TIMESTAMP(date_redeemed,'yyyyMMddHHmmss'))"
      expiry_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(expiry_date,'yyyyMMddHHmmss'))"
      create_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(create_date,'yyyyMMddHHmmss'))"
    }
  }


  fact_point_history: {
    surrogateKey: "point_history_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      ip_code: "ipcode"
      pointtransactionid: "point_transaction_id"
      vckey: "vc_key"
      points: "points_earned"
      pointsonhold: "points_on_hold"
      pointsconsumed: "points_consumed"
      pointawarddate: "points_awarded_date"
      transactiondate: "txn_date"
      expirationdate: "expiration_date"
      pointtypeid: "point_type_id"
      pointtypename: "point_type_name"
      pointtypedescription: "point_type_description"
      pointeventid: "point_event_id"
      pointeventname: "point_event_name"
      pointeventdescription: "point_event_description"
      moneybacked: "money_backed"
      consumptionpriority: "consumption_priority"
      defaultpoints: "default_points"
      transactiontype: "transaction_type"
      ownertype: "owner_type"
      ownerid: "owner_id"
      parenttransactionid: "parent_transaction_id"
    }
    transform: {
      txn_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(txn_date,'yyyyMMddHHmmss'))"
      points_awarded_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(points_awarded_date,'yyyyMMddHHmmss'))"
      expiration_date: "FROM_UNIXTIME(UNIX_TIMESTAMP(expiration_date,'yyyyMMddHHmmss'))"
      card_type_key: '39'
      promotion_key: "NULL"
      point_source_id: 'LW'
      promo_code: "NULL"
      expiration_reason: "NULL"
      points_location_id: "NULL"
      points_changed_by: "NULL"
      associated_reward_history_id: "-1"
      consumes_point_history_id: "parent_transaction_id"
      member_key: "CASE WHEN member_key is NULL THEN -1 ELSE member_key END"
      points_awarded_date_key: "CASE WHEN points_awarded_date_key is NULL THEN -1 ELSE points_awarded_date_key END"
      txn_date_key: "CASE WHEN txn_date_key is NULL THEN -1 ELSE txn_date_key END"
      expiration_date_key: "CASE WHEN expiration_date_key is NULL THEN -1 ELSE expiration_date_key END"
      transaction_type_description: "CASE  when transaction_type = 1 THEN 'CREDIT' when transaction_type = 2 THEN 'DEBIT' when transaction_type = 3 THEN 'HOLD' when transaction_type = 4 THEN 'POINTS CONSUMED' when transaction_type = 5 THEN 'POINTS TRANSFER' END"
    }
  },

  fact_reward_history: {
    surrogateKey: "reward_history_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      memberid: "ipcode"
      certificatenmbr: "certificate_nbr"
      availablebalance: "available_balance"
      fulfillmentoption: "fulfillment_option"
      dateissued: "reward_issue_date"
      expiration: "reward_expiration_date"
      fulfillmentdate: "reward_fulfillment_date"
      redemptiondate: "api_redemption_date"
      productid: "product_id"
      productvariantid: "product_variant_id"
      changedby: "changed_by"
    }
    transform: {
      reward_def_key: "CASE WHEN reward_def_key is NULL THEN -1 ELSE reward_def_key END"
      reward_issue_date_key: "CASE WHEN reward_issue_date_key is NULL THEN -1 ELSE reward_issue_date_key END"
      reward_expiration_date_key: "CASE WHEN reward_expiration_date_key is NULL THEN -1 ELSE reward_expiration_date_key END"
      reward_fulfillment_date_key: "CASE WHEN reward_fulfillment_date_key is NULL THEN -1 ELSE reward_fulfillment_date_key END"
      api_redemption_date_key: "CASE WHEN api_redemption_date_key is NULL THEN -1 ELSE api_redemption_date_key END"
      #ipcode                      : "member_key"
      trxn_redemption_date: "api_redemption_date"
      trxn_redemption_date_key: "CASE WHEN api_redemption_date_key is NULL THEN -1 ELSE api_redemption_date_key END"
    }
  }


  fact_tier_history: {
    surrogateKey: "tier_hist_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      "member id": "ipcode"
      "from date": "tier_begin_date"
      "to date": "tier_end_date"
    }
    transform: {
      tier_key: "CASE WHEN tier_key is NULL THEN -1 ELSE tier_key END"
      tier_begin_date_key: "CASE WHEN tier_begin_date_key is NULL THEN -1 ELSE tier_begin_date_key END"
      tier_end_date_key: "CASE WHEN tier_end_date_key is NULL THEN -1 ELSE tier_end_date_key END"
    }
  }

  fact_reward_trxn_history: {
    surrogateKey: "fact_reward_trxn_history_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {}
    transform: {}
  }

  fact_click_data: {
    surrogateKey: "fact_click_data_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {}
    transform: {
      url_type_text: "NULL"
    }
  }

  fact_delivery_data: {
    surrogateKey: "fact_delivery_data_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {}
    transform: {
      status_text: "NULL"
      failure_reason_text: "NULL"
      channel_text: "NULL"
    }
  }

  fact_quarantine_data: {
    surrogateKey: "fact_quarantine_data_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      address: "email_address"
    }
    transform: {
      status_text: "NULL"
      type_text: "NULL"
    }
  }

  fact_broadcast_results: {
    surrogateKey: "fact_broadcast_results_id"
    generateSK: true
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      3c_campaign_id: "ir_campaign_id"
      sent_datetime: "sent_date"
    }
    transform: {}
  }

  dim_scoring_model: {
    surrogateKey: "scoring_model_key"
    generateSK: false
    doNotIncrSK: false
    grpColumns: ["scoring_model_key"]
    ordColumns: []
    rename: {}
    transform: {}
  }

  edw_dim_household_history: {
    surrogateKey: "household_key"
    generateSK: false
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      status: cc_flag
    }
    transform: {}
  }

  edw_dim_member_history: {
    surrogateKey: "member_key"
    generateSK: false
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      cm_gender_merch_descr: "gender_merch_units"
      last_store_purch_date: "last_store_trxn_date"
      last_web_purch_date: "last_web_trxn_date"
    }
    transform: {}
  }

  edw_transaction_detail: {
    surrogateKey: "transaction_detail_id"
    generateSK: false
    doNotIncrSK  : false
    grpColumns: []
    ordColumns: []
    rename: {
      register_nbr : "register_number"
      trxn_nbr : "tran_number"
      post_date : "run_date"
      trxn_time_key : "trxn_time"
    }
    transform: {}
  }

  edw_transaction_summary: {
    surrogateKey: "trxn_id"
    generateSK: false
    doNotIncrSK: false
    grpColumns: []
    ordColumns: []
    rename: {
      post_date: "run_date"
    }
    transform: {}
  }

}





